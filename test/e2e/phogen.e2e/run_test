#! /usr/bin/env python3

import astropy.io.fits as fits
import sys
sys.path.append('../scripts/')
import sixte


sixte.check_pythonversion(3,6)

# initialize default variables
defvar = sixte.defvar
dir="data/dummy"
fout = defvar.fname_pholist
tool = 'PHOGEN'

file1=f"data/refdata/{defvar.prefix_refdata}{fout}"
file2=f"{defvar.prefix_dummy}{fout}"


def check_att_fov(fout,expos):
    # check if the criterion: 50% margin on FoV is fulfilled
    prec = 0.01  # be careful, we've only got low number statistics

    hdul = fits.open(fout)
    data = hdul[1].data
    time_range = max(data['time']) - min(data['time'])
    ## as the FoV is 1deg and the speed is 1deg/ksec, we expect
    ## 1ksec duration, making it 1.5ksec with margins
    margin_dur = 1.5e3;

    if abs(margin_dur - time_range)/margin_dur > prec:
        print(" *** Error expected photon interval {:.3f}, but found  {:.3f}".format(margin_dur, time_range))
        return 1
    else:
        return 0


# print(f'   *** testing {tool}  *** ')

ret_val = sixte.phogen(fout,defvar.xml,defvar.simput,
                       logfile=defvar.log,
                       prefix=defvar.prefix_dummy,test=1)

sixte.check_returncode(ret_val,tool)

sixte.check_fdiff(file1,file2,tool)

tool = 'PHOGEN + Attitude / FoV Margin'
# print(f'   *** testing {tool}  *** ')

expos = 4e3;
ret_val = sixte.phogen(fout,defvar.xml,defvar.simput,
                       expos=expos,
                       attitude=defvar.attitude,
                       logfile=defvar.log,
                       prefix=defvar.prefix_dummy,test=1)

ret_val=check_att_fov(file2,expos)

sixte.check_returnvalue(ret_val,tool)

sixte.clean_output()


