The installation of this package is based on the GNU autotools.

If you checked out the sources directly from the repository, make sure
that you also obtained and installed SIMPUT before installing SIXTE.

Before you can run the compilation, you have to create a configure
script from the existing 'configure.ac'. For this purpose go into the
main directory of the package (the location of the file you are
currently reading) and run the 'autoreconf' command belonging to the
GNU autotools. (If you obtained the code from the .tar.gz archive, you
can skip the following step and continue with the next paragraph.)

 autoreconf --install

This basically generates the 'configure' script (and some
'Makefile.in's). In the next step you have to run the 'configure'
script to produce 'Makefile's for the compilation and installation of
the software. At this point you also have to specify the installation
directory. The default setting on most platforms is '/usr/local',
i.e. the binaries will be installed to '/usr/local/bin', the libraries
to '/usr/local/lib' etc. This setting can be changed using the
'--prefix' option of the 'configure' script (see below). For a local
installation, e.g. type:

 ./configure --prefix=$HOME

Now the 'Makefile's to compile and install the software should be
available. In order to continue type:

 make
 make install

The simulation package uses several FITS template files to create FITS
files. These templates are stored in ${prefix}/share/sixte/templates
during the installation. The instrument XML definition files are
maintained in the directory ${prefix}/share/sixte/instruments.
For parameter input the simulation software uses the PIL / APE library
and therefore requires a .par file for each simulation task. These
files are installed in the directory ${prefix}/share/sixte/pfiles. 

In order to run the simulation, you have to set an
environment variable called $SIXTE pointing to the ${prefix} directory and then call the setup script 'install-sixte.sh' or 'install-sixte.csh' depending on which shell you use.

In a C-shell environment you can do this with the following command:

setenv SIXTE $HOME
source $SIXTE/bin/sixte-install.csh

In a Bash environment the corresponding command is:

export SIXTE=$HOME
$SIXTE/bin/sixte-install.sh
