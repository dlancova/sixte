The installation of this package is based on the GNU autotools.

If you checked out the sources directly from the repository, make sure
that you also checked out the source code for the SIMPUT library. This
can be achieved with the following commands:

 cd sixt/
 git submodule init
 git submodule update

Before you can run the compilation, you have to create a configure
script from the existing 'configure.ac'. For this purpose go into the
main directory of the package (where there is this file) and run the
'autoreconf' command belonging to the GNU autotools. (If you extraced
the code from the .tar.gz archive, you can skip the following step and
continue with the next paragraph.)

 autoreconf --install

This basically generates the 'configure' script (and some
'Makefile.in's). In the next step you have to run the 'configure'
script to produce 'Makefile's for the compilation and installation of
the software. At this point you also have to specify the installation
directory. The default setting on most platforms is '/usr/local',
i.e. the binaries will be installed to '/usr/local/bin', the libraries
to '/usr/local/lib' etc. This setting can be changed using the
'--prefix' option of the 'configure' script (see below). Apart from
the installation directory you also have to specify the location,
where the PIL parameter files will be installed. This option can also
be set on the command line or the environment via the 'PFILESDIR'
variable. If the software will be used by different users the
parameter files should be stored in the '${HEADAS}/syspfiles'
directory (ususally root privileges required). For a local
installation for the current user, the files can also be stored in
'${HOME}/pfiles'. So for a local installation, e.g. type:

 ./configure --prefix=$HOME PFILESDIR=$HOME/pfiles F77=gfortran

Now the 'Makefile's to compile and install the software should be
available. In order to continue type:

 make
 make install

The simulation package uses several FITS template files to create FITS
files. These templates are stored in ${prefix}/share/sixte/templates
during the installation. The instrument XML definition files are
maintained in the directory ${prefix}/share/sixte/instruments.

For parameter input the simulation software uses the PIL / APE library
and therefore requires a .par file for each simulation task. These
files are installed in the directory specified by PFILESDIR. In order
to make them available to the simulation, you have to set an
environment variable called $PFILES pointing to this directory. 

In a C-shell environment you can do this with the following command:

setenv PFILES $HOME/pfiles

In a Bash environment the corresponding command is:

export PFILES=$HOME/pfiles

If you have HEAsoft installed on your system, this variable might
already exist. In that case make sure that it contains the path
specified by PFILESDIR.

If everything worked properly you can now use the software.
